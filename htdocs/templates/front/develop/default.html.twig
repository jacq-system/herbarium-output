{% extends 'front/main.html.twig' %}
{% block title %}Develop Symfony overview{% endblock %}

{% block main %}
    <div class="container">
        <a href="{{ path('app.swagger') }}">REST Swagger JSON</a><br/>
        <a href="{{ path('app.swagger_ui') }}">REST Swagger UI</a><br/>
        <a href="{{ path('deve_rest') }}">REST service info</a><br/>

        <a href="{{ path('app_front_checkDjatokaServers') }}">checkDjatokaServers</a><br/>
        <a href="{{ path('app_front_jacqStatistics') }}">jacqStatistics</a><br/>

<div class="row">
    <h5>TODO </h5>
     <p>include Matomo analytics</p>
    <p>Annosys annotations | https://annosys.bgbm.fu-berlin.de/AnnoSys - not implemented, should be?</p>
    <h5>Refactoring</h5>
    <p>All code was transferred with effort minimalized, most refactoring is connected only to necessary changes (like
        db calls or Dependency Injection). I had a wish to split methods according to entities/domains, but struggle
        mostly on it - the priority is to get working copy now, refactor when deployed. E.g. Statistics or search of specimens represents a
        little bit more elaborated remake.</p>
    <p>when walking through the code, I had sometimes comments - all are kept inline with //TODO notation;  but they do not need any immediate action, just kept for evidence and future use.</p>

    <h5>Hints</h5>
    <p>Symfony is a MVC framework. Controllers should be thin, equals to "index.php" files in jacq-services. Model is
        covered here by Services and in some cases where more services were needed or the logic is cross-entity, a
        Facade was introduced - nevertheless this structure is only outlined and will require more effort.</p>
    <p>Similar to Slim, Symfony provides named routes. As compiled in one app (in jacq-services was each folder = single
        app), it allows to use Router and getBaseUrl() style no more needed.</p>
    <p>Many database calls are kept in raw SQL approach. Benefits of Doctrine <a
            href="https://symfony.com/doc/current/doctrine.html">ORM</a> are not fully utilized. The RW and RO database
        automatic switch is covered b Doctrine. If interested, read more <a
            href="https://medium.com/@dominykasmurauskas1/how-to-add-read-write-replicas-on-symfony-6-using-doctrine-bundle-a46447449f35">here</a>,
        in general executeQuery() runs on replica(s) and executeStatement() on writable.</p>
    <p></p>

    <h5>Deployment</h5>
    <p>We are running everything in Kubernetes or at least in docker_compose in Czech. Develop <a
            href="https://github.com/jacq-system/develop">repository</a> provides reproducible environment to run in
        local settings as Nginx+PHP-FPM. But this is not a necessary for production environment and can be used as any
        other app. Routing is at this moment done in easy way, according to the structure seen I expect some thick proxy
        forwarding is done at JACQ.org nowadays - this has to be explored together.</p>

    <h5>Problems&Question</h5>
    <p>in jacq-services repository are more folders than "rest:"</p>
    <ul>
        <li>https://github.com/jacq-system/jacq-services/tree/develop/commonNames/references/scientificName - is it
            used (and should be implemented in Symfony also), where can I find it online?
        </li>
        <li>https://github.com/jacq-system/jacq-services/tree/develop/monitor - dtto?</li>
        <li>https://github.com/jacq-system/jacq-services/tree/develop/oai - as Johannes is working on it, I skipped it
            for now
        </li>
    </ul>

    <p>To agree the Symfony version as equivalent to jacq-services (beside routing, see above), there are some things I
        please for a help (prefixed with the route, links and results see bellow, line specific comments provided by
        TODOs in code):</p>
    <ol>
        <li><b>/services/rest/classification/download/{referenceType}/{referenceID}</b> this service requires two
            configuration keys I do not know (and do not satisfy with my vision of the architecture) -
            $this->settings['apikey'] and $this->settings['classifications_license']
        </li>
        <li><b>/services/rest/iiif/createManifest/{serverID}/{imageIdentifier}</b> - can anybode please provide
            parameters those provide 200 response at JACQ.org?
        </li>
        <li><b>/services/rest/livingplants/derivatives</b> - "Table 'herbarinput.tbl_organisation' doesn't exist" -
            should this route be implemented or deleted?
        </li>
        <li><b>/services/rest/objects/specimens/search</b> - similar - delete or implement?</li>
        <li><b>/services/rest/JACQscinames/uuid/{taxonID} + /services/rest/JACQscinames/name/{taxonID} +
                /services/rest/JACQscinames/resolve/{uuid}</b> - UUID topic - need the API key
        </li>
    </ol>
</div>
    </div>
{% endblock %}
